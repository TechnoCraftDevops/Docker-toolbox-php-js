FROM jakzal/phpqa:1.85.0-php8.1-alpine

# update alpine
RUN apk update && apk upgrade

# install linux package
RUN apk add openssh-client wget curl git make bash libzip-dev zip ncurses nodejs npm

# install php dependency
RUN apk add php8-curl \
            php8-openssl \
            php8-iconv \
            php8-json \
            php8-mbstring \
            php8-phar \
            php8-mysqli \
            php8-pdo \
            php8-pdo_mysql \
            php8-xdebug \
            php8-dom --repository http://nl.alpinelinux.org/alpine/edge/testing/ && rm /var/cache/apk/* 
RUN docker-php-ext-install mysqli pdo pdo_mysql
RUN echo xdebug.mode=coverage > /usr/local/etc/php/conf.d/xdebug.ini

# install release tool
RUN composer global require marcocesarato/php-conventional-changelog
RUN echo -e '#!/usr/bin/env bash' >> ./release-it-first
RUN echo "php /tools/.composer/vendor/marcocesarato/php-conventional-changelog/conventional-changelog --first-release" >> ./release-it-first
RUN echo -e '#!/usr/bin/env bash' >> ./release-it
RUN echo "php /tools/.composer/vendor/marcocesarato/php-conventional-changelog/conventional-changelog --commit" >> ./release-it
RUN chmod +x release-it-first
RUN chmod +x release-it

# install commit linter node
RUN npm install --g @commitlint/prompt-cli @commitlint/cli @commitlint/config-conventional conventional-changelog-angular

# install php-compatibility
RUN composer global require --dev --prefer-stable phpcompatibility/php-compatibility:*
RUN phpcs --config-set installed_paths /tools/.composer/vendor/phpcompatibility/php-compatibility,../../pheromone/phpcs-security-audit

#install unsed tools
RUN composer global require icanhazstring/composer-unused
RUN echo -e '#!/usr/bin/env bash' >> ./composer-check-unused
RUN echo "php /tools/.composer/vendor/icanhazstring/composer-unused/composer-unused.php" >> ./composer-check-unused
RUN chmod +x composer-check-unused

# install symfony CLI
RUN curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.alpine.sh' | sh
RUN apk add symfony-cli
RUN symfony

RUN php --ini

CMD [ "bash" ]